{"version":3,"sources":["webpack:///path---docs-highlighter-overlay-view-dc8f43623b8cfc857f3e.js","webpack:///./.cache/json/docs-highlighter-overlay-view.json"],"names":["webpackJsonp","355","module","exports","pathContext","component","displayName","docblock","description","props","name","type","defaultValue","components","node","text","value"],"mappings":"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","file":"path---docs-highlighter-overlay-view-dc8f43623b8cfc857f3e.js","sourcesContent":["webpackJsonp([22131726337916],{\n\n/***/ 355:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"component\":{\"displayName\":\"HighlighterOverlayView\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeWidth\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null},{\"name\":\"onRequestClose\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightFrame\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"style\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTag\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"children\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTagParams\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"minimumRectSize\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"innerPadding\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null}]},\"components\":[{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"BaseListItem component\",\"description\":{\"text\":\"BaseListItem component\"},\"props\":[{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"HighlighterOverlayView\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeWidth\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null},{\"name\":\"onRequestClose\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightFrame\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"style\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTag\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"children\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTagParams\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"minimumRectSize\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"innerPadding\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"AnimatedScanner\",\"docblock\":\"@description: Scanner component for progress indication\\n@extends: Animated.View\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@gif: https://media.giphy.com/media/l49JVcxoclUXbryiA/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/CardScannerScreen.js\",\"description\":null,\"props\":[{\"name\":\"progress\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"animated value between 0 and 100\"},\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"duration\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Duration of current break (can be change between breaks)\"},\"defaultValue\":{\"value\":\"1000\"}},{\"name\":\"opacity\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"scanner opacity\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"scanner background color\"},\"defaultValue\":null},{\"name\":\"onBreakpoint\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"breakpoint callback - ({progress, isDone}) => {}\"},\"defaultValue\":null},{\"name\":\"hideScannerLine\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should hide the scanner line\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"AnimatedImage\",\"docblock\":\"@description: Image component that fades-in the image with animation once it's loaded\\n@extends: Animated.Image\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@gif: https://media.giphy.com/media/l0HU7jj0ivEFyZIA0/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AnimatedImageScreen.js\",\"description\":null,\"props\":[{\"name\":\"containerStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Additional spacing styles for the container\"},\"defaultValue\":null},{\"name\":\"imageStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Style for the image component\"},\"defaultValue\":null},{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The image source (external or assets)\"},\"defaultValue\":null},{\"name\":\"animationDuration\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Duration for the fade animation when the image is loaded\"},\"defaultValue\":{\"value\":\"300\"}},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the avatar in tests\"},\"defaultValue\":null},{\"name\":\"loader\",\"type\":{\"name\":\"element\"},\"description\":{\"text\":\"A component to render while the image is loading\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ProgressBar\",\"docblock\":\"@description: Animated progress bar\\n@gif:https://media.giphy.com/media/3o752o08oY0oCvOxR6/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/ProgressBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"height of the progress bar\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"background color of the component\"},\"defaultValue\":{\"value\":\"Colors.dark60\"}},{\"name\":\"progressBackgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the progress background color\"},\"defaultValue\":{\"value\":\"Colors.dark10\"}}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"@description: A multiple layer for multiple shadow effect for iOS only\",\"description\":null,\"props\":[{\"name\":\"topShadow\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"top shadow style to use\"},\"defaultValue\":null},{\"name\":\"bottomShadow\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"bottom shadow style to use\"},\"defaultValue\":null},{\"name\":\"shadowType\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"a combination of top and bottom shadow based on shadow presets names\"},\"defaultValue\":{\"value\":\"'white40'\"}},{\"name\":\"shadowColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Custom shadow color to be applied on both top and bottom shadows\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ActionBar\",\"docblock\":\"@description: Quick actions bar, each action support Button component props\\n@modifiers: margin, padding\\n@gif: https://media.giphy.com/media/xULW8DwxkniFDMw7TO/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"action bar height\"},\"defaultValue\":{\"value\":\"48\"}},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"action bar background color\"},\"defaultValue\":{\"value\":\"Colors.white\"}},{\"name\":\"actions\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"actions for the action bar\"},\"defaultValue\":null},{\"name\":\"centered\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should action be equally centered\"},\"defaultValue\":null},{\"name\":\"style\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"style the action bar\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ActionSheet\",\"docblock\":\"@description: Cross platform Action sheet, with a support for native iOS solution\\n@gif: https://media.giphy.com/media/l0HUpXOR6RqB2ct5S/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionSheetScreen.js\",\"description\":null,\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Whether to show the action sheet or not\"},\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Title of the action sheet. Note: if both title and message are not passed will not render the title view at all\"},\"defaultValue\":{\"value\":\"undefined\"}},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Message of the action sheet\"},\"defaultValue\":{\"value\":\"undefined\"}},{\"name\":\"cancelButtonIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Index of the option represents the cancel action (to be displayed as the separated bottom bold button)\"},\"defaultValue\":null},{\"name\":\"destructiveButtonIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Index of the option represents the destructive action (will display red text. Usually used for 'delete' or\\n'abort' actions)\"},\"defaultValue\":null},{\"name\":\"options\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"List of options for the action sheet, follows the Button prop types (supply 'label' string and 'onPress'\\nfunction)\"},\"defaultValue\":null},{\"name\":\"onDismiss\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when dismissing the action sheet, usually used for setting visible prop to false\"},\"defaultValue\":null},{\"name\":\"useNativeIOS\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Should use the native action sheet for iOS\"},\"defaultValue\":null},{\"name\":\"showCancelButton\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"When passed (only with useNativeIOS), will display a cancel button at the bottom (overrides cancelButtonIndex)\"},\"defaultValue\":{\"value\":\"false\"}}]}},{\"node\":{\"displayName\":\"Badge\",\"docblock\":\"@description: Round colored badge, typically used to show a number\\n@extends: Animatable.View\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show inside the badge\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the badge background\"},\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"the badge size (default, small)\"},\"defaultValue\":{\"value\":\"'default'\"}},{\"name\":\"borderWidth\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"width of border around the badge\"},\"defaultValue\":null},{\"name\":\"borderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"color of border around the badge\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the badge in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Avatar\",\"docblock\":\"@description: Avatar component for displaying user profile images\\n@extends: TouchableOpacity\\n@extendsnotes: (when passing onPress)\\n@extendslink: docs/TouchableOpacity\\n@image: https://user-images.githubusercontent.com/33805983/34480603-197d7f64-efb6-11e7-9feb-db8ba756f055.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.js\",\"description\":null,\"props\":[{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Background color for Avatar\"},\"defaultValue\":{\"value\":\"Colors.dark80\"}},{\"name\":\"containerStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"Additional spacing styles for the container\"},\"defaultValue\":null},{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The image source (external or assets)\"},\"defaultValue\":null},{\"name\":\"onImageLoadStart\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Listener-callback for when an image's (uri) loading\\nstarts (equiv. to Image.onLoadStart()).\"},\"defaultValue\":null},{\"name\":\"onImageLoadEnd\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Listener-callback for when an image's (uri) loading\\neither succeeds or fails (equiv. to Image.onLoadEnd()).\"},\"defaultValue\":null},{\"name\":\"onImageLoadError\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Listener-callback for when an image's (uri) loading\\nfails (equiv. to Image.onError()).\"},\"defaultValue\":null},{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Label that can represent initials\"},\"defaultValue\":null},{\"name\":\"labelColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The label color\"},\"defaultValue\":{\"value\":\"Colors.dark10\"}},{\"name\":\"ribbonLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"ribbon label to display on the avatar\"},\"defaultValue\":null},{\"name\":\"ribbonStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"ribbon custom style\"},\"defaultValue\":null},{\"name\":\"ribbonLabelStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"ribbon label custom style\"},\"defaultValue\":null},{\"name\":\"isOnline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Determine if to show online badge\"},\"defaultValue\":null},{\"name\":\"status\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"AWAY, ONLINE, OFFLINE or NONE mode (if set to a value other then 'NONE' will override isOnline prop)\"},\"defaultValue\":{\"value\":\"'NONE'\"}},{\"name\":\"size\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Custom size for the Avatar\"},\"defaultValue\":{\"value\":\"50\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the avatar in tests\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Press handler\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card.Image\",\"docblock\":\"@description: Card.Image, part of the Card component belongs inside a Card (better be a direct child)\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Image source, either remote source or local\"},\"defaultValue\":null},{\"name\":\"width\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Image width\"},\"defaultValue\":null},{\"name\":\"height\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Image height\"},\"defaultValue\":null},{\"name\":\"position\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The Image position which determines the appropriate flex-ness of the image and border radius (for Android)\\nthis prop derived automatically from Card parent component if it rendered as a direct child of the\\nCard component\"},\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"border radius, basically for Android since overflow doesn't work well\"},\"defaultValue\":{\"value\":\"BorderRadiuses.br40\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Button\",\"docblock\":\"@description: Basic button component\\n@extends: TouchableOpacity\\n@extendslink: docs/TouchableOpacity\\n@modifiers: margin, background\\n@gif: https://media.giphy.com/media/xULW8j5WzsuPytqklq/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ButtonsScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show inside the button\"},\"defaultValue\":null},{\"name\":\"iconSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Icon image source\"},\"defaultValue\":null},{\"name\":\"iconStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Icon image style\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the button background\"},\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"Size of the button [large, medium, small]\"},\"defaultValue\":{\"value\":\"'large'\"}},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Custom border radius.\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Actions handler\"},\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Disable interactions for the component\"},\"defaultValue\":null},{\"name\":\"outline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Button will have outline style\"},\"defaultValue\":{\"value\":\"false\"}},{\"name\":\"outlineColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The outline color\"},\"defaultValue\":null},{\"name\":\"link\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Button will look like a link\"},\"defaultValue\":null},{\"name\":\"linkColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"label color for when it's displayed as link\"},\"defaultValue\":null},{\"name\":\"labelStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for label text\"},\"defaultValue\":{\"value\":\"{}\"}},{\"name\":\"fullWidth\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the button act as a coast to coast button (no border radius)\"},\"defaultValue\":null},{\"name\":\"enableShadow\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Control shadow visibility\"},\"defaultValue\":null},{\"name\":\"labelProps\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Props that will be passed to the button's Text label.\"},\"defaultValue\":null},{\"name\":\"avoidInnerPadding\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"avoid inner button padding\"},\"defaultValue\":null},{\"name\":\"avoidMinWidth\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"avoid minimum width constraints\"},\"defaultValue\":null},{\"name\":\"getActiveBackgroundColor\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for getting activeBackgroundColor (e.g. (calculatedBackgroundColor, prop) => {...})\\nbetter set using ThemeManager\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the button in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card.Item\",\"docblock\":\"@description: Card.Item, a sub Card component for layout-ing inside a card\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"row\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"align flex as a row (default)\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"column\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"align flex as a column\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card\",\"docblock\":\"@description: Card component\\n@extends: TouchableOpacity\\n@extendsnotes: (when passing onPress)\\n@extendslink: docs/TouchableOpacity\\n@modifiers: margin, padding\\n@gif: https://media.giphy.com/media/l0HU9SKWmv0VTOYMM/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"width\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"card custom width\"},\"defaultValue\":null},{\"name\":\"height\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"card custom height\"},\"defaultValue\":null},{\"name\":\"row\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should inner card flow direction be horizontal\"},\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"card border radius (will be passed to inner Card.Image component)\"},\"defaultValue\":{\"value\":\"BorderRadiuses.br40\"}},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"action for when pressing the card\"},\"defaultValue\":null},{\"name\":\"enableShadow\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether the card should have shadow or not\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"elevation\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"elevation value (Android only)\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the button in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card.Section\",\"docblock\":\"@description: Card.Section, a sub Card component for layout-ing inside a card\\n@extends: BlurView\\n@extendsnotes: (iOS only)\\n@extendslink: https://github.com/react-native-community/react-native-blur/blob/master/src/BlurView.ios.js\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"enableBlur\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Enable blur view for the section\"},\"defaultValue\":null},{\"name\":\"blurOptions\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Blur options\"},\"defaultValue\":null},{\"name\":\"body\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"thid modifier apply inner padding\"},\"defaultValue\":null},{\"name\":\"footer\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"style as a footer, remove bottom spacing\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ConnectionStatusBar\",\"docblock\":\"@description: Top bar to show a \\\"no internet\\\" connection status. Note: Run on real device for best results\\n@image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show as the status\"},\"defaultValue\":{\"value\":\"'No internet. Check your connection.'\"}},{\"name\":\"onConnectionChange\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Handler to get connection change events propagation\"},\"defaultValue\":null},{\"name\":\"allowDismiss\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Text to show as the status\"},\"defaultValue\":{\"value\":\"false\"}}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"pageWidth\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"Constants.screenWidth\"}},{\"name\":\"initialPage\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"loop\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Carousel\",\"docblock\":\"@description: Carousel for scrolling pages horizontally\\n@gif: https://media.giphy.com/media/l0HU7f8gjpRlMRhKw/giphy.gif, https://media.giphy.com/media/3oFzmcjX9OhpyckhcQ/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.js\",\"description\":null,\"props\":[{\"name\":\"initialPage\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"this first page to start with\"},\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"pageWidth\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"the page width (all pages should have the same page)\"},\"defaultValue\":{\"value\":\"Constants.screenWidth\"}},{\"name\":\"loop\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"if true, will have infinite scroll\"},\"defaultValue\":null},{\"name\":\"onChangePage\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when page has changed\"},\"defaultValue\":null},{\"name\":\"onScroll\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for onScroll event of the internall ScrollView\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"the carousel style\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"FeatureHighlight\",\"docblock\":\"@description: FeatureHighlight component for feature discovery\\n@notes: 1) FeatureHighlight component must be a direct child of the root view returned in render()., 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\\n@extends: HighlighterOverlayView\\n@extendslink: docs/HighlighterOverlayView\\n@notes: 1) The component MUST be a direct child of the root view returned in render()., 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\\n@extends: HighlighterOverlayView\\n@gif: https://media.giphy.com/media/3ohs4D5irZm5GojsDS/giphy.gif, https://media.giphy.com/media/3oxQNaDQckPZI78rWo/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.js\",\"description\":null,\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Boolean to determine if to present the feature highlight component\"},\"defaultValue\":null},{\"name\":\"highlightFrame\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"Frame of the area to highlight\"},\"defaultValue\":null},{\"name\":\"getTarget\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Callback that extract the ref of the element to be highlighted\"},\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Title of the content to be displayed\"},\"defaultValue\":null},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Message to be displayed\"},\"defaultValue\":null},{\"name\":\"titleNumberOfLines\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Title's max number of lines\"},\"defaultValue\":{\"value\":\"1\"}},{\"name\":\"messageNumberOfLines\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Message's max number of lines\"},\"defaultValue\":{\"value\":\"5\"}},{\"name\":\"confirmButtonProps\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Props that will be passed to the dismiss button\"},\"defaultValue\":null},{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the content's background (usually includes alpha for transparency)\"},\"defaultValue\":null},{\"name\":\"textColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the content's text\"},\"defaultValue\":null},{\"name\":\"borderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the border around the highlighted element\"},\"defaultValue\":null},{\"name\":\"borderWidth\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Width of the border around the highlighted element\"},\"defaultValue\":null},{\"name\":\"minimumRectSize\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"The minimum size of the highlighted component (Android API 21+, and only when passing a ref in 'getTarget')\"},\"defaultValue\":{\"value\":\"{width: 56, height: 56}\"}},{\"name\":\"innerPadding\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The padding of the highlight frame around the highlighted element's frame (only when passing ref in 'getTarget')\"},\"defaultValue\":{\"value\":\"10\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the component in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Image\",\"docblock\":\"@description: Image wrapper with extra functionality like source transform and assets support\\n@extends: Image\\n@extendslink: https://facebook.github.io/react-native/docs/image.html\",\"description\":null,\"props\":[{\"name\":\"sourceTransformer\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"custom source transform handler for manipulating the image source (great for size control)\"},\"defaultValue\":null},{\"name\":\"assetName\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"if provided image source we be drriven from asset name\"},\"defaultValue\":null},{\"name\":\"assetGroup\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the asset group, default is \\\"icons\\\"\"},\"defaultValue\":{\"value\":\"'icons'\"}}]}},{\"node\":{\"displayName\":\"MaskedInput\",\"docblock\":\"@description: Mask Input to create custom looking inputs with custom formats\\n@extends: TextInput\\n@extendslink: docs/TagsInput\\n@gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.js\",\"description\":null,\"props\":[{\"name\":\"renderMaskedText\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for rendering the custom input out of the value returns from the actual input\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"container style for the masked input container\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TextArea\",\"docblock\":\"@description: a wrapper for Text Input component to create enclosed text area\\n@extends: TextInput\\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\\n@modifiers: Typography\\n@gif: https://media.giphy.com/media/3oFzmoU8TdfHeYZNZu/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js\",\"description\":null,\"props\":[{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TextInput\",\"docblock\":\"@description: A wrapper for Text Input component with extra functionality like floating placeholder\\n@extends: TextInput\\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\\n@modifiers: Typography\\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js\",\"description\":null,\"props\":[{\"name\":\"floatingPlaceholder\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should placeholder have floating behavior\"},\"defaultValue\":null},{\"name\":\"floatingPlaceholderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"floating placeholder color\"},\"defaultValue\":{\"value\":\"Colors.dark40\"}},{\"name\":\"hideUnderline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"hide text input underline, by default false\"},\"defaultValue\":null},{\"name\":\"underlineColor\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"underline color in a string format or object of states - {default: 'black', error: 'red', focus: 'blue'}\"},\"defaultValue\":null},{\"name\":\"centered\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should text input be align to center\"},\"defaultValue\":null},{\"name\":\"error\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"input error message, should be empty if no error exists\"},\"defaultValue\":null},{\"name\":\"enableErrors\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the input component support error messages\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"expandable\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the input expand to another text area modal\"},\"defaultValue\":null},{\"name\":\"transformer\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"transform function executed on value and return transformed value\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"placeholderTextColor\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"Colors.dark40\"}}]}},{\"node\":{\"displayName\":\"ListItem.Part\",\"docblock\":\"@description: ListItem.Part, a sub ListItem component for layout-ing inside a ListItem\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js\",\"description\":null,\"props\":[{\"name\":\"left\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content will be aligned to left\"},\"defaultValue\":null},{\"name\":\"middle\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content will be aligned to spreaded\"},\"defaultValue\":null},{\"name\":\"right\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content will be aligned to right\"},\"defaultValue\":null},{\"name\":\"row\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content direction will be row (default)\"},\"defaultValue\":null},{\"name\":\"column\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content direction will be column\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"container style\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ListItem\",\"docblock\":\"@description: List item component to render inside a ListView component\\n@extends: TouchableOpacity\\n@extendslink: docs/TouchableOpacity\\n@gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js\",\"description\":null,\"props\":[{\"name\":\"height\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"the list item height\"},\"defaultValue\":{\"value\":\"63\"}},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"action for when pressing the item\"},\"defaultValue\":null},{\"name\":\"onLongPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"action for when long pressing the item\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"containerElement\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"The container element to wrap the ListItem\"},\"defaultValue\":{\"value\":\"TouchableOpacity\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the ListItem in tests\"},\"defaultValue\":null},{\"name\":\"underlayColor\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"Colors.dark70\"}}]}},{\"node\":{\"displayName\":\"PageControl\",\"docblock\":\"@description: Page indicator, typically used in paged scroll-views\\n@image: https://user-images.githubusercontent.com/33805983/34663655-76698110-f460-11e7-854b-243d27f66fec.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.js\",\"description\":null,\"props\":[{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"numOfPages\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Total number of pages\"},\"defaultValue\":null},{\"name\":\"currentPage\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Zero-based index of the current page\"},\"defaultValue\":null},{\"name\":\"onPagePress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Action handler for clicking on a page indicator\"},\"defaultValue\":null},{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the selected page dot and the border of the not selected pages\"},\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The size of the page indicator\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Notification\",\"docblock\":\"@description: The Notification component will be changed soon, please use the Toast component instead\",\"description\":null,\"props\":[]}},{\"node\":{\"displayName\":\"Picker.Item\",\"docblock\":\"@description: Picker.Item, for configuring the Picker's selectable options\\n@extends: TouchableOpacity\\n@extendslink: docs/TouchableOpacity\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"[DEPRECATED - please include the label in the value prop] The item label\"},\"defaultValue\":null},{\"name\":\"value\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"The item value with the following format - {value: ..., label: ...},\\nfor custom shape use getItemLabel, getItemValue props\"},\"defaultValue\":null},{\"name\":\"getItemLabel\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"function to return the label out of the item value prop when value is custom shaped.\"},\"defaultValue\":null},{\"name\":\"getItemValue\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"function to return the value out of the item value prop when value is custom shaped.\"},\"defaultValue\":null},{\"name\":\"isSelected\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Is the item selected\"},\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Is the item disabled\"},\"defaultValue\":null},{\"name\":\"renderItem\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"render custom item\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"topBarProps\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show on the button\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the button in tests\"},\"defaultValue\":null},{\"name\":\"styles\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Style from the parent component with `button` style, `buttonText` style and `disableText` style\"},\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Disabled state of the button\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Handler function to receive updates when the value changes\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Picker\",\"docblock\":\"@description: Picker Component, support single or multiple selection, blurModel and floatingPlaceholder\\n@extends: TextInput\\n@extendslink: docs/TextInput\\n@gif: https://media.giphy.com/media/3o751SiuZZiByET2lq/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"value\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"picker current value in the shape of {value: ..., label: ...}, for custom shape use 'getItemValue' prop\"},\"defaultValue\":null},{\"name\":\"onChange\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when picker value change\"},\"defaultValue\":null},{\"name\":\"mode\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"SINGLE mode or MULTI mode\"},\"defaultValue\":{\"value\":\"'SINGLE'\"}},{\"name\":\"enableModalBlur\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Adds blur effect to picker modal (only iOS)\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"renderPicker\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"render custom picker\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"add onPress callback for when pressing the picker\"},\"defaultValue\":null},{\"name\":\"getItemValue\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"a function that extract the unique value out of the value prop in case value has a custom structure.\"},\"defaultValue\":null},{\"name\":\"topBarProps\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"The picker modal top bar props\"},\"defaultValue\":null},{\"name\":\"expandable\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"text70\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"floatingPlaceholder\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"true\"}}]}},{\"node\":{\"displayName\":\"Stepper\",\"docblock\":\"@description: Stepper component with increase and decrease buttons\\n@gif: https://media.giphy.com/media/3oFzm47bk0v4WV15O8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show next to the current number\"},\"defaultValue\":null},{\"name\":\"min\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Minimum value\"},\"defaultValue\":null},{\"name\":\"max\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Maximum value\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"onValueChange\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Handler function to receive updates when the value changes\"},\"defaultValue\":null},{\"name\":\"initialValue\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"the initial value\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TabBar.Item\",\"docblock\":\"@description: TabBar.Item, inner component of TabBar for configuring the tabs\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"label of the tab\"},\"defaultValue\":null},{\"name\":\"labelStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom label style\"},\"defaultValue\":null},{\"name\":\"selectedLabelStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom selected tab label style\"},\"defaultValue\":null},{\"name\":\"selected\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether the tab is selected or not\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when pressing a tab\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TabBar\",\"docblock\":\"@description: Basic TabBar component\\n@gif: https://media.giphy.com/media/3o751YHFZVlv3Ay4k8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"selectedIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"current selected tab index\"},\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"style\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom style for the tab bar\"},\"defaultValue\":null},{\"name\":\"indicatorStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom style for the selected indicator\"},\"defaultValue\":null},{\"name\":\"disableAnimatedTransition\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"disable the animated transition of the tab indicator\"},\"defaultValue\":null},{\"name\":\"onChangeIndex\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when index has change\"},\"defaultValue\":null},{\"name\":\"height\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"51\"}}]}},{\"node\":{\"displayName\":\"TagsInput\",\"docblock\":\"@description: Tags input component (chips)\\n@modifiers: Typography\\n@gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"tags\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"list of tags. can be string or custom object when implementing getLabel\"},\"defaultValue\":null},{\"name\":\"getLabel\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for extracting the label out of the tag item\"},\"defaultValue\":null},{\"name\":\"renderTag\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for custom rendering tag item\"},\"defaultValue\":null},{\"name\":\"onChangeTags\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for onChangeTags event\"},\"defaultValue\":null},{\"name\":\"onCreateTag\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for creating new tag out of input value (good for composing tag object)\"},\"defaultValue\":null},{\"name\":\"onTagPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when pressing a tag in the following format (tagIndex, markedTagIndex) => {...}\"},\"defaultValue\":null},{\"name\":\"disableTagRemoval\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"if true, tags *removal* Ux won't be available\"},\"defaultValue\":null},{\"name\":\"disableTagAdding\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"if true, tags *adding* Ux (i.e. by 'submitting' the input text) won't be available\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom styling for the component container\"},\"defaultValue\":null},{\"name\":\"tagStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom styling for the tag item\"},\"defaultValue\":null},{\"name\":\"inputStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom styling for the text input\"},\"defaultValue\":null},{\"name\":\"hideUnderline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should hide input underline\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Text\",\"docblock\":\"@description: A wrapper for Text component with extra functionality like modifiers support\\n@extends: Text\\n@extendslink: https://facebook.github.io/react-native/docs/text.html\\n@modifiers: margins, color, typography\",\"description\":null,\"props\":[{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"color of the text\"},\"defaultValue\":null},{\"name\":\"center\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether to center the text (using textAlign)\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Toast\",\"docblock\":\"@description Toast component for showing a feedback about a user action.\\n@extends: Animatable.View\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@gif: https://media.giphy.com/media/3oFzm1pKqGXybiDUre/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ToastsScreen.js\",\"description\":null,\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Whether to show or hide the toast\"},\"defaultValue\":null},{\"name\":\"position\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"The position of the toast. top or bottom\"},\"defaultValue\":{\"value\":\"'top'\"}},{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The height of the toast\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The background color of the toast\"},\"defaultValue\":null},{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the toast content color (message, actions labels)\"},\"defaultValue\":{\"value\":\"Colors.white\"}},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the toast message\"},\"defaultValue\":null},{\"name\":\"messageStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"a custom style for the toast message\"},\"defaultValue\":null},{\"name\":\"actions\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"one or two actions for the user to display in the toast\"},\"defaultValue\":null},{\"name\":\"onDismiss\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for dismiss action\"},\"defaultValue\":null},{\"name\":\"allowDismiss\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"show dismiss action\"},\"defaultValue\":null},{\"name\":\"centerMessage\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should message be centered in the toast\"},\"defaultValue\":null},{\"name\":\"animated\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the toast appear/disappear with animation\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"enableBlur\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"enable blur effect for Toast\"},\"defaultValue\":null},{\"name\":\"blurOptions\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"blur option for blur effect according to react-native-blur lib (make sure enableBlur is on)\"},\"defaultValue\":null},{\"name\":\"zIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"custom zIndex for toast\"},\"defaultValue\":{\"value\":\"100\"}}]}},{\"node\":{\"displayName\":\"Tour\",\"docblock\":\"[WIP] a Tour component for feature discoverability\",\"description\":{\"text\":\"[WIP] a Tour component for feature discoverability\"},\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Whether to show the tour or not\"},\"defaultValue\":{\"value\":\"false\"}},{\"name\":\"onClose\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for closing the tour\"},\"defaultValue\":null},{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The overlay background color\"},\"defaultValue\":{\"value\":\"Colors.white\"}},{\"name\":\"overlayOpacity\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The overlay opacity\"},\"defaultValue\":{\"value\":\"0.9\"}},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the message to show next to the target component\"},\"defaultValue\":null},{\"name\":\"messageStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"the message custom style\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"View\",\"docblock\":\"@description: Wrapper component for React Native View component\\n@extends: View\\n@extendslink: https://facebook.github.io/react-native/docs/view.html\\n@modifiers: margins, paddings, alignments, background, borderRadius\",\"description\":null,\"props\":[]}},{\"node\":{\"displayName\":\"ExampleComponent\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":{\"value\":\"'blue'\"}},{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TouchableOpacity\",\"docblock\":\"@description: A wrapper for TouchableOpacity component. Support onPress, throttling and activeBackgroundColor\\n@extends: TouchableOpacity\\n@extendslink: https://facebook.github.io/react-native/docs/touchableopacity.html\\n@gif: https://media.giphy.com/media/xULW8AMIgw7l31zjm8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/src/components/touchableOpacity/index.js\",\"description\":null,\"props\":[{\"name\":\"throttleTime\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"throttle time in MS for onPress callback\"},\"defaultValue\":null},{\"name\":\"throttleOptions\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"throttle options\"},\"defaultValue\":null},{\"name\":\"activeBackgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Apply background color on TouchableOpacity when active (press is on)\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"GridListItem component\",\"description\":{\"text\":\"GridListItem component\"},\"props\":[{\"name\":\"index\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"titleStyle\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"secondaryTitle\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"secondaryTitleStyle\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"subtitle\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"subtitleStyle\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"210\"}},{\"name\":\"imageSource\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"GridList component\",\"description\":{\"text\":\"GridList component\"},\"props\":[{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":{\"value\":\"Colors.dark80\"}},{\"name\":\"items\",\"type\":{\"name\":\"array\"},\"description\":null,\"defaultValue\":{\"value\":\"[]\"}},{\"name\":\"renderItem\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"itemsInRow\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"2\"}}]}},{\"node\":{\"displayName\":\"LoaderScreen\",\"docblock\":\"@description: Component that shows a full screen with an activity indicator\\n@extends: Animatable.View\\n@gif: https://media.giphy.com/media/3o75212iau1oK8hznG/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/LoadingScreen.js\",\"description\":null,\"props\":[{\"name\":\"loaderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the loading indicator\"},\"defaultValue\":null},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"loader message\"},\"defaultValue\":null},{\"name\":\"messageStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"message style\"},\"defaultValue\":null},{\"name\":\"overlay\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Show the screen as an overlay\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Modal\",\"docblock\":\"@description: Component that present content on top of the invoking screen\\n@extends: Modal\\n@extendslink: https://facebook.github.io/react-native/docs/modal.html\\n@gif: https://media.giphy.com/media/3oFzmfSX8KgvctI4Ks/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.js\",\"description\":null,\"props\":[{\"name\":\"enableModalBlur\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Modal.TopBar\",\"docblock\":\"@description: Modal.TopBar, inner component for configuring the Modal component's title, buttons and statusBar\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.js\",\"description\":null,\"props\":[{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"title to display in the center of the top bar\"},\"defaultValue\":null},{\"name\":\"titleStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"title custom style\"},\"defaultValue\":null},{\"name\":\"doneButtonProps\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"done action props (Button props)\"},\"defaultValue\":{\"value\":\"{}\"}},{\"name\":\"doneLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"done action label\"},\"defaultValue\":{\"value\":\"'Save'\"}},{\"name\":\"doneIcon\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"done action icon\"},\"defaultValue\":null},{\"name\":\"onDone\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"done action callback\"},\"defaultValue\":null},{\"name\":\"cancelButtonProps\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"cancel action props (Button props)\"},\"defaultValue\":{\"value\":\"{}\"}},{\"name\":\"cancelLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"cancel action label\"},\"defaultValue\":null},{\"name\":\"cancelIcon\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"cancel action icon\"},\"defaultValue\":{\"value\":\"Assets.icons.x\"}},{\"name\":\"onCancel\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"cancel action callback\"},\"defaultValue\":null},{\"name\":\"includeStatusBar\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether to include status bar or not (height claculations)\"},\"defaultValue\":{\"value\":\"Constants.isIOS\"}}]}},{\"node\":{\"displayName\":\"StateScreen\",\"docblock\":\"@description: Component that shows a full screen for a certain state, like an empty state\\n@image: https://user-images.githubusercontent.com/33805983/34672894-f262ab84-f488-11e7-83f0-4ee0f0ac34ba.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/EmptyStateScreen.js\",\"description\":null,\"props\":[{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The image source that's showing at the top. use an image that was required locally\"},\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"To to show as the title\"},\"defaultValue\":null},{\"name\":\"subtitle\",\"type\":{\"name\":\"any\"},\"description\":{\"text\":\"Text to to show as the subtitle\"},\"defaultValue\":null},{\"name\":\"ctaLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to to show in the \\\"call to action\\\" button\"},\"defaultValue\":null},{\"name\":\"onCtaPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Action handler for \\\"call to action\\\" button\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the container in tests\"},\"defaultValue\":null}]}}]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-highlighter-overlay-view-dc8f43623b8cfc857f3e.js","module.exports = {\"pathContext\":{\"component\":{\"displayName\":\"HighlighterOverlayView\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeWidth\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null},{\"name\":\"onRequestClose\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightFrame\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"style\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTag\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"children\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTagParams\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"minimumRectSize\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"innerPadding\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null}]},\"components\":[{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"BaseListItem component\",\"description\":{\"text\":\"BaseListItem component\"},\"props\":[{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"HighlighterOverlayView\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"strokeWidth\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null},{\"name\":\"onRequestClose\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightFrame\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"style\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTag\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"children\",\"type\":{\"name\":\"union\"},\"description\":null,\"defaultValue\":null},{\"name\":\"highlightViewTagParams\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"minimumRectSize\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null},{\"name\":\"innerPadding\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"AnimatedScanner\",\"docblock\":\"@description: Scanner component for progress indication\\n@extends: Animated.View\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@gif: https://media.giphy.com/media/l49JVcxoclUXbryiA/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/CardScannerScreen.js\",\"description\":null,\"props\":[{\"name\":\"progress\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"animated value between 0 and 100\"},\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"duration\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Duration of current break (can be change between breaks)\"},\"defaultValue\":{\"value\":\"1000\"}},{\"name\":\"opacity\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"scanner opacity\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"scanner background color\"},\"defaultValue\":null},{\"name\":\"onBreakpoint\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"breakpoint callback - ({progress, isDone}) => {}\"},\"defaultValue\":null},{\"name\":\"hideScannerLine\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should hide the scanner line\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"AnimatedImage\",\"docblock\":\"@description: Image component that fades-in the image with animation once it's loaded\\n@extends: Animated.Image\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@gif: https://media.giphy.com/media/l0HU7jj0ivEFyZIA0/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AnimatedImageScreen.js\",\"description\":null,\"props\":[{\"name\":\"containerStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Additional spacing styles for the container\"},\"defaultValue\":null},{\"name\":\"imageStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Style for the image component\"},\"defaultValue\":null},{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The image source (external or assets)\"},\"defaultValue\":null},{\"name\":\"animationDuration\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Duration for the fade animation when the image is loaded\"},\"defaultValue\":{\"value\":\"300\"}},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the avatar in tests\"},\"defaultValue\":null},{\"name\":\"loader\",\"type\":{\"name\":\"element\"},\"description\":{\"text\":\"A component to render while the image is loading\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ProgressBar\",\"docblock\":\"@description: Animated progress bar\\n@gif:https://media.giphy.com/media/3o752o08oY0oCvOxR6/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/ProgressBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"height of the progress bar\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"background color of the component\"},\"defaultValue\":{\"value\":\"Colors.dark60\"}},{\"name\":\"progressBackgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the progress background color\"},\"defaultValue\":{\"value\":\"Colors.dark10\"}}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"@description: A multiple layer for multiple shadow effect for iOS only\",\"description\":null,\"props\":[{\"name\":\"topShadow\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"top shadow style to use\"},\"defaultValue\":null},{\"name\":\"bottomShadow\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"bottom shadow style to use\"},\"defaultValue\":null},{\"name\":\"shadowType\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"a combination of top and bottom shadow based on shadow presets names\"},\"defaultValue\":{\"value\":\"'white40'\"}},{\"name\":\"shadowColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Custom shadow color to be applied on both top and bottom shadows\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ActionBar\",\"docblock\":\"@description: Quick actions bar, each action support Button component props\\n@modifiers: margin, padding\\n@gif: https://media.giphy.com/media/xULW8DwxkniFDMw7TO/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"action bar height\"},\"defaultValue\":{\"value\":\"48\"}},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"action bar background color\"},\"defaultValue\":{\"value\":\"Colors.white\"}},{\"name\":\"actions\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"actions for the action bar\"},\"defaultValue\":null},{\"name\":\"centered\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should action be equally centered\"},\"defaultValue\":null},{\"name\":\"style\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"style the action bar\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ActionSheet\",\"docblock\":\"@description: Cross platform Action sheet, with a support for native iOS solution\\n@gif: https://media.giphy.com/media/l0HUpXOR6RqB2ct5S/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionSheetScreen.js\",\"description\":null,\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Whether to show the action sheet or not\"},\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Title of the action sheet. Note: if both title and message are not passed will not render the title view at all\"},\"defaultValue\":{\"value\":\"undefined\"}},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Message of the action sheet\"},\"defaultValue\":{\"value\":\"undefined\"}},{\"name\":\"cancelButtonIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Index of the option represents the cancel action (to be displayed as the separated bottom bold button)\"},\"defaultValue\":null},{\"name\":\"destructiveButtonIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Index of the option represents the destructive action (will display red text. Usually used for 'delete' or\\n'abort' actions)\"},\"defaultValue\":null},{\"name\":\"options\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"List of options for the action sheet, follows the Button prop types (supply 'label' string and 'onPress'\\nfunction)\"},\"defaultValue\":null},{\"name\":\"onDismiss\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when dismissing the action sheet, usually used for setting visible prop to false\"},\"defaultValue\":null},{\"name\":\"useNativeIOS\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Should use the native action sheet for iOS\"},\"defaultValue\":null},{\"name\":\"showCancelButton\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"When passed (only with useNativeIOS), will display a cancel button at the bottom (overrides cancelButtonIndex)\"},\"defaultValue\":{\"value\":\"false\"}}]}},{\"node\":{\"displayName\":\"Badge\",\"docblock\":\"@description: Round colored badge, typically used to show a number\\n@extends: Animatable.View\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show inside the badge\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the badge background\"},\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"the badge size (default, small)\"},\"defaultValue\":{\"value\":\"'default'\"}},{\"name\":\"borderWidth\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"width of border around the badge\"},\"defaultValue\":null},{\"name\":\"borderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"color of border around the badge\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the badge in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Avatar\",\"docblock\":\"@description: Avatar component for displaying user profile images\\n@extends: TouchableOpacity\\n@extendsnotes: (when passing onPress)\\n@extendslink: docs/TouchableOpacity\\n@image: https://user-images.githubusercontent.com/33805983/34480603-197d7f64-efb6-11e7-9feb-db8ba756f055.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.js\",\"description\":null,\"props\":[{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Background color for Avatar\"},\"defaultValue\":{\"value\":\"Colors.dark80\"}},{\"name\":\"containerStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"Additional spacing styles for the container\"},\"defaultValue\":null},{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The image source (external or assets)\"},\"defaultValue\":null},{\"name\":\"onImageLoadStart\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Listener-callback for when an image's (uri) loading\\nstarts (equiv. to Image.onLoadStart()).\"},\"defaultValue\":null},{\"name\":\"onImageLoadEnd\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Listener-callback for when an image's (uri) loading\\neither succeeds or fails (equiv. to Image.onLoadEnd()).\"},\"defaultValue\":null},{\"name\":\"onImageLoadError\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Listener-callback for when an image's (uri) loading\\nfails (equiv. to Image.onError()).\"},\"defaultValue\":null},{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Label that can represent initials\"},\"defaultValue\":null},{\"name\":\"labelColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The label color\"},\"defaultValue\":{\"value\":\"Colors.dark10\"}},{\"name\":\"ribbonLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"ribbon label to display on the avatar\"},\"defaultValue\":null},{\"name\":\"ribbonStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"ribbon custom style\"},\"defaultValue\":null},{\"name\":\"ribbonLabelStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"ribbon label custom style\"},\"defaultValue\":null},{\"name\":\"isOnline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Determine if to show online badge\"},\"defaultValue\":null},{\"name\":\"status\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"AWAY, ONLINE, OFFLINE or NONE mode (if set to a value other then 'NONE' will override isOnline prop)\"},\"defaultValue\":{\"value\":\"'NONE'\"}},{\"name\":\"size\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Custom size for the Avatar\"},\"defaultValue\":{\"value\":\"50\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the avatar in tests\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Press handler\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card.Image\",\"docblock\":\"@description: Card.Image, part of the Card component belongs inside a Card (better be a direct child)\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Image source, either remote source or local\"},\"defaultValue\":null},{\"name\":\"width\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Image width\"},\"defaultValue\":null},{\"name\":\"height\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Image height\"},\"defaultValue\":null},{\"name\":\"position\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The Image position which determines the appropriate flex-ness of the image and border radius (for Android)\\nthis prop derived automatically from Card parent component if it rendered as a direct child of the\\nCard component\"},\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"border radius, basically for Android since overflow doesn't work well\"},\"defaultValue\":{\"value\":\"BorderRadiuses.br40\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Button\",\"docblock\":\"@description: Basic button component\\n@extends: TouchableOpacity\\n@extendslink: docs/TouchableOpacity\\n@modifiers: margin, background\\n@gif: https://media.giphy.com/media/xULW8j5WzsuPytqklq/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ButtonsScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show inside the button\"},\"defaultValue\":null},{\"name\":\"iconSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Icon image source\"},\"defaultValue\":null},{\"name\":\"iconStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Icon image style\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the button background\"},\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"Size of the button [large, medium, small]\"},\"defaultValue\":{\"value\":\"'large'\"}},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Custom border radius.\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Actions handler\"},\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Disable interactions for the component\"},\"defaultValue\":null},{\"name\":\"outline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Button will have outline style\"},\"defaultValue\":{\"value\":\"false\"}},{\"name\":\"outlineColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The outline color\"},\"defaultValue\":null},{\"name\":\"link\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Button will look like a link\"},\"defaultValue\":null},{\"name\":\"linkColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"label color for when it's displayed as link\"},\"defaultValue\":null},{\"name\":\"labelStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for label text\"},\"defaultValue\":{\"value\":\"{}\"}},{\"name\":\"fullWidth\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the button act as a coast to coast button (no border radius)\"},\"defaultValue\":null},{\"name\":\"enableShadow\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Control shadow visibility\"},\"defaultValue\":null},{\"name\":\"labelProps\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Props that will be passed to the button's Text label.\"},\"defaultValue\":null},{\"name\":\"avoidInnerPadding\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"avoid inner button padding\"},\"defaultValue\":null},{\"name\":\"avoidMinWidth\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"avoid minimum width constraints\"},\"defaultValue\":null},{\"name\":\"getActiveBackgroundColor\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for getting activeBackgroundColor (e.g. (calculatedBackgroundColor, prop) => {...})\\nbetter set using ThemeManager\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the button in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card.Item\",\"docblock\":\"@description: Card.Item, a sub Card component for layout-ing inside a card\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"row\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"align flex as a row (default)\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"column\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"align flex as a column\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card\",\"docblock\":\"@description: Card component\\n@extends: TouchableOpacity\\n@extendsnotes: (when passing onPress)\\n@extendslink: docs/TouchableOpacity\\n@modifiers: margin, padding\\n@gif: https://media.giphy.com/media/l0HU9SKWmv0VTOYMM/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"width\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"card custom width\"},\"defaultValue\":null},{\"name\":\"height\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"card custom height\"},\"defaultValue\":null},{\"name\":\"row\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should inner card flow direction be horizontal\"},\"defaultValue\":null},{\"name\":\"borderRadius\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"card border radius (will be passed to inner Card.Image component)\"},\"defaultValue\":{\"value\":\"BorderRadiuses.br40\"}},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"action for when pressing the card\"},\"defaultValue\":null},{\"name\":\"enableShadow\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether the card should have shadow or not\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"elevation\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"elevation value (Android only)\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the button in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Card.Section\",\"docblock\":\"@description: Card.Section, a sub Card component for layout-ing inside a card\\n@extends: BlurView\\n@extendsnotes: (iOS only)\\n@extendslink: https://github.com/react-native-community/react-native-blur/blob/master/src/BlurView.ios.js\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js\",\"description\":null,\"props\":[{\"name\":\"enableBlur\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Enable blur view for the section\"},\"defaultValue\":null},{\"name\":\"blurOptions\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Blur options\"},\"defaultValue\":null},{\"name\":\"body\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"thid modifier apply inner padding\"},\"defaultValue\":null},{\"name\":\"footer\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"style as a footer, remove bottom spacing\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ConnectionStatusBar\",\"docblock\":\"@description: Top bar to show a \\\"no internet\\\" connection status. Note: Run on real device for best results\\n@image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show as the status\"},\"defaultValue\":{\"value\":\"'No internet. Check your connection.'\"}},{\"name\":\"onConnectionChange\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Handler to get connection change events propagation\"},\"defaultValue\":null},{\"name\":\"allowDismiss\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Text to show as the status\"},\"defaultValue\":{\"value\":\"false\"}}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"pageWidth\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"Constants.screenWidth\"}},{\"name\":\"initialPage\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"loop\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Carousel\",\"docblock\":\"@description: Carousel for scrolling pages horizontally\\n@gif: https://media.giphy.com/media/l0HU7f8gjpRlMRhKw/giphy.gif, https://media.giphy.com/media/3oFzmcjX9OhpyckhcQ/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.js\",\"description\":null,\"props\":[{\"name\":\"initialPage\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"this first page to start with\"},\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"pageWidth\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"the page width (all pages should have the same page)\"},\"defaultValue\":{\"value\":\"Constants.screenWidth\"}},{\"name\":\"loop\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"if true, will have infinite scroll\"},\"defaultValue\":null},{\"name\":\"onChangePage\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when page has changed\"},\"defaultValue\":null},{\"name\":\"onScroll\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for onScroll event of the internall ScrollView\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"the carousel style\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"FeatureHighlight\",\"docblock\":\"@description: FeatureHighlight component for feature discovery\\n@notes: 1) FeatureHighlight component must be a direct child of the root view returned in render()., 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\\n@extends: HighlighterOverlayView\\n@extendslink: docs/HighlighterOverlayView\\n@notes: 1) The component MUST be a direct child of the root view returned in render()., 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\\n@extends: HighlighterOverlayView\\n@gif: https://media.giphy.com/media/3ohs4D5irZm5GojsDS/giphy.gif, https://media.giphy.com/media/3oxQNaDQckPZI78rWo/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.js\",\"description\":null,\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Boolean to determine if to present the feature highlight component\"},\"defaultValue\":null},{\"name\":\"highlightFrame\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"Frame of the area to highlight\"},\"defaultValue\":null},{\"name\":\"getTarget\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Callback that extract the ref of the element to be highlighted\"},\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Title of the content to be displayed\"},\"defaultValue\":null},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Message to be displayed\"},\"defaultValue\":null},{\"name\":\"titleNumberOfLines\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Title's max number of lines\"},\"defaultValue\":{\"value\":\"1\"}},{\"name\":\"messageNumberOfLines\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Message's max number of lines\"},\"defaultValue\":{\"value\":\"5\"}},{\"name\":\"confirmButtonProps\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Props that will be passed to the dismiss button\"},\"defaultValue\":null},{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the content's background (usually includes alpha for transparency)\"},\"defaultValue\":null},{\"name\":\"textColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the content's text\"},\"defaultValue\":null},{\"name\":\"borderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the border around the highlighted element\"},\"defaultValue\":null},{\"name\":\"borderWidth\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Width of the border around the highlighted element\"},\"defaultValue\":null},{\"name\":\"minimumRectSize\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"The minimum size of the highlighted component (Android API 21+, and only when passing a ref in 'getTarget')\"},\"defaultValue\":{\"value\":\"{width: 56, height: 56}\"}},{\"name\":\"innerPadding\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The padding of the highlight frame around the highlighted element's frame (only when passing ref in 'getTarget')\"},\"defaultValue\":{\"value\":\"10\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the component in tests\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Image\",\"docblock\":\"@description: Image wrapper with extra functionality like source transform and assets support\\n@extends: Image\\n@extendslink: https://facebook.github.io/react-native/docs/image.html\",\"description\":null,\"props\":[{\"name\":\"sourceTransformer\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"custom source transform handler for manipulating the image source (great for size control)\"},\"defaultValue\":null},{\"name\":\"assetName\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"if provided image source we be drriven from asset name\"},\"defaultValue\":null},{\"name\":\"assetGroup\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the asset group, default is \\\"icons\\\"\"},\"defaultValue\":{\"value\":\"'icons'\"}}]}},{\"node\":{\"displayName\":\"MaskedInput\",\"docblock\":\"@description: Mask Input to create custom looking inputs with custom formats\\n@extends: TextInput\\n@extendslink: docs/TagsInput\\n@gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.js\",\"description\":null,\"props\":[{\"name\":\"renderMaskedText\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for rendering the custom input out of the value returns from the actual input\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"container style for the masked input container\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TextArea\",\"docblock\":\"@description: a wrapper for Text Input component to create enclosed text area\\n@extends: TextInput\\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\\n@modifiers: Typography\\n@gif: https://media.giphy.com/media/3oFzmoU8TdfHeYZNZu/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js\",\"description\":null,\"props\":[{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TextInput\",\"docblock\":\"@description: A wrapper for Text Input component with extra functionality like floating placeholder\\n@extends: TextInput\\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\\n@modifiers: Typography\\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js\",\"description\":null,\"props\":[{\"name\":\"floatingPlaceholder\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should placeholder have floating behavior\"},\"defaultValue\":null},{\"name\":\"floatingPlaceholderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"floating placeholder color\"},\"defaultValue\":{\"value\":\"Colors.dark40\"}},{\"name\":\"hideUnderline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"hide text input underline, by default false\"},\"defaultValue\":null},{\"name\":\"underlineColor\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"underline color in a string format or object of states - {default: 'black', error: 'red', focus: 'blue'}\"},\"defaultValue\":null},{\"name\":\"centered\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should text input be align to center\"},\"defaultValue\":null},{\"name\":\"error\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"input error message, should be empty if no error exists\"},\"defaultValue\":null},{\"name\":\"enableErrors\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the input component support error messages\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"expandable\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the input expand to another text area modal\"},\"defaultValue\":null},{\"name\":\"transformer\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"transform function executed on value and return transformed value\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"placeholderTextColor\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"Colors.dark40\"}}]}},{\"node\":{\"displayName\":\"ListItem.Part\",\"docblock\":\"@description: ListItem.Part, a sub ListItem component for layout-ing inside a ListItem\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js\",\"description\":null,\"props\":[{\"name\":\"left\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content will be aligned to left\"},\"defaultValue\":null},{\"name\":\"middle\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content will be aligned to spreaded\"},\"defaultValue\":null},{\"name\":\"right\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content will be aligned to right\"},\"defaultValue\":null},{\"name\":\"row\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content direction will be row (default)\"},\"defaultValue\":null},{\"name\":\"column\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"this part content direction will be column\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"container style\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"ListItem\",\"docblock\":\"@description: List item component to render inside a ListView component\\n@extends: TouchableOpacity\\n@extendslink: docs/TouchableOpacity\\n@gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js\",\"description\":null,\"props\":[{\"name\":\"height\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"the list item height\"},\"defaultValue\":{\"value\":\"63\"}},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"action for when pressing the item\"},\"defaultValue\":null},{\"name\":\"onLongPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"action for when long pressing the item\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"containerElement\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"The container element to wrap the ListItem\"},\"defaultValue\":{\"value\":\"TouchableOpacity\"}},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the ListItem in tests\"},\"defaultValue\":null},{\"name\":\"underlayColor\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"Colors.dark70\"}}]}},{\"node\":{\"displayName\":\"PageControl\",\"docblock\":\"@description: Page indicator, typically used in paged scroll-views\\n@image: https://user-images.githubusercontent.com/33805983/34663655-76698110-f460-11e7-854b-243d27f66fec.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.js\",\"description\":null,\"props\":[{\"name\":\"containerStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"numOfPages\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Total number of pages\"},\"defaultValue\":null},{\"name\":\"currentPage\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Zero-based index of the current page\"},\"defaultValue\":null},{\"name\":\"onPagePress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Action handler for clicking on a page indicator\"},\"defaultValue\":null},{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the selected page dot and the border of the not selected pages\"},\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The size of the page indicator\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Notification\",\"docblock\":\"@description: The Notification component will be changed soon, please use the Toast component instead\",\"description\":null,\"props\":[]}},{\"node\":{\"displayName\":\"Picker.Item\",\"docblock\":\"@description: Picker.Item, for configuring the Picker's selectable options\\n@extends: TouchableOpacity\\n@extendslink: docs/TouchableOpacity\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"[DEPRECATED - please include the label in the value prop] The item label\"},\"defaultValue\":null},{\"name\":\"value\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"The item value with the following format - {value: ..., label: ...},\\nfor custom shape use getItemLabel, getItemValue props\"},\"defaultValue\":null},{\"name\":\"getItemLabel\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"function to return the label out of the item value prop when value is custom shaped.\"},\"defaultValue\":null},{\"name\":\"getItemValue\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"function to return the value out of the item value prop when value is custom shaped.\"},\"defaultValue\":null},{\"name\":\"isSelected\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Is the item selected\"},\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Is the item disabled\"},\"defaultValue\":null},{\"name\":\"renderItem\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"render custom item\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"topBarProps\",\"type\":{\"name\":\"shape\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show on the button\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the button in tests\"},\"defaultValue\":null},{\"name\":\"styles\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Style from the parent component with `button` style, `buttonText` style and `disableText` style\"},\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Disabled state of the button\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Handler function to receive updates when the value changes\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Picker\",\"docblock\":\"@description: Picker Component, support single or multiple selection, blurModel and floatingPlaceholder\\n@extends: TextInput\\n@extendslink: docs/TextInput\\n@gif: https://media.giphy.com/media/3o751SiuZZiByET2lq/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"value\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"picker current value in the shape of {value: ..., label: ...}, for custom shape use 'getItemValue' prop\"},\"defaultValue\":null},{\"name\":\"onChange\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when picker value change\"},\"defaultValue\":null},{\"name\":\"mode\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"SINGLE mode or MULTI mode\"},\"defaultValue\":{\"value\":\"'SINGLE'\"}},{\"name\":\"enableModalBlur\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Adds blur effect to picker modal (only iOS)\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"renderPicker\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"render custom picker\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"add onPress callback for when pressing the picker\"},\"defaultValue\":null},{\"name\":\"getItemValue\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"a function that extract the unique value out of the value prop in case value has a custom structure.\"},\"defaultValue\":null},{\"name\":\"topBarProps\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"The picker modal top bar props\"},\"defaultValue\":null},{\"name\":\"expandable\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"text70\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"floatingPlaceholder\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"true\"}}]}},{\"node\":{\"displayName\":\"Stepper\",\"docblock\":\"@description: Stepper component with increase and decrease buttons\\n@gif: https://media.giphy.com/media/3oFzm47bk0v4WV15O8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to show next to the current number\"},\"defaultValue\":null},{\"name\":\"min\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Minimum value\"},\"defaultValue\":null},{\"name\":\"max\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"Maximum value\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"Additional styles for the top container\"},\"defaultValue\":null},{\"name\":\"onValueChange\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Handler function to receive updates when the value changes\"},\"defaultValue\":null},{\"name\":\"initialValue\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"the initial value\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TabBar.Item\",\"docblock\":\"@description: TabBar.Item, inner component of TabBar for configuring the tabs\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"label of the tab\"},\"defaultValue\":null},{\"name\":\"labelStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom label style\"},\"defaultValue\":null},{\"name\":\"selectedLabelStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom selected tab label style\"},\"defaultValue\":null},{\"name\":\"selected\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether the tab is selected or not\"},\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when pressing a tab\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TabBar\",\"docblock\":\"@description: Basic TabBar component\\n@gif: https://media.giphy.com/media/3o751YHFZVlv3Ay4k8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js\",\"description\":null,\"props\":[{\"name\":\"selectedIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"current selected tab index\"},\"defaultValue\":{\"value\":\"0\"}},{\"name\":\"style\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom style for the tab bar\"},\"defaultValue\":null},{\"name\":\"indicatorStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom style for the selected indicator\"},\"defaultValue\":null},{\"name\":\"disableAnimatedTransition\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"disable the animated transition of the tab indicator\"},\"defaultValue\":null},{\"name\":\"onChangeIndex\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when index has change\"},\"defaultValue\":null},{\"name\":\"height\",\"type\":null,\"description\":null,\"defaultValue\":{\"value\":\"51\"}}]}},{\"node\":{\"displayName\":\"TagsInput\",\"docblock\":\"@description: Tags input component (chips)\\n@modifiers: Typography\\n@gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js\",\"description\":null,\"props\":[{\"name\":\"tags\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"list of tags. can be string or custom object when implementing getLabel\"},\"defaultValue\":null},{\"name\":\"getLabel\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for extracting the label out of the tag item\"},\"defaultValue\":null},{\"name\":\"renderTag\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for custom rendering tag item\"},\"defaultValue\":null},{\"name\":\"onChangeTags\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for onChangeTags event\"},\"defaultValue\":null},{\"name\":\"onCreateTag\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for creating new tag out of input value (good for composing tag object)\"},\"defaultValue\":null},{\"name\":\"onTagPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for when pressing a tag in the following format (tagIndex, markedTagIndex) => {...}\"},\"defaultValue\":null},{\"name\":\"disableTagRemoval\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"if true, tags *removal* Ux won't be available\"},\"defaultValue\":null},{\"name\":\"disableTagAdding\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"if true, tags *adding* Ux (i.e. by 'submitting' the input text) won't be available\"},\"defaultValue\":null},{\"name\":\"containerStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom styling for the component container\"},\"defaultValue\":null},{\"name\":\"tagStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom styling for the tag item\"},\"defaultValue\":null},{\"name\":\"inputStyle\",\"type\":{\"name\":\"custom\"},\"description\":{\"text\":\"custom styling for the text input\"},\"defaultValue\":null},{\"name\":\"hideUnderline\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should hide input underline\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Text\",\"docblock\":\"@description: A wrapper for Text component with extra functionality like modifiers support\\n@extends: Text\\n@extendslink: https://facebook.github.io/react-native/docs/text.html\\n@modifiers: margins, color, typography\",\"description\":null,\"props\":[{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"color of the text\"},\"defaultValue\":null},{\"name\":\"center\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether to center the text (using textAlign)\"},\"defaultValue\":null},{\"name\":\"testID\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Toast\",\"docblock\":\"@description Toast component for showing a feedback about a user action.\\n@extends: Animatable.View\\n@extendslink: https://github.com/oblador/react-native-animatable\\n@gif: https://media.giphy.com/media/3oFzm1pKqGXybiDUre/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ToastsScreen.js\",\"description\":null,\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Whether to show or hide the toast\"},\"defaultValue\":null},{\"name\":\"position\",\"type\":{\"name\":\"enum\"},\"description\":{\"text\":\"The position of the toast. top or bottom\"},\"defaultValue\":{\"value\":\"'top'\"}},{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The height of the toast\"},\"defaultValue\":null},{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The background color of the toast\"},\"defaultValue\":null},{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the toast content color (message, actions labels)\"},\"defaultValue\":{\"value\":\"Colors.white\"}},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the toast message\"},\"defaultValue\":null},{\"name\":\"messageStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"a custom style for the toast message\"},\"defaultValue\":null},{\"name\":\"actions\",\"type\":{\"name\":\"arrayOf\"},\"description\":{\"text\":\"one or two actions for the user to display in the toast\"},\"defaultValue\":null},{\"name\":\"onDismiss\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for dismiss action\"},\"defaultValue\":null},{\"name\":\"allowDismiss\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"show dismiss action\"},\"defaultValue\":null},{\"name\":\"centerMessage\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should message be centered in the toast\"},\"defaultValue\":null},{\"name\":\"animated\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"should the toast appear/disappear with animation\"},\"defaultValue\":{\"value\":\"true\"}},{\"name\":\"enableBlur\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"enable blur effect for Toast\"},\"defaultValue\":null},{\"name\":\"blurOptions\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"blur option for blur effect according to react-native-blur lib (make sure enableBlur is on)\"},\"defaultValue\":null},{\"name\":\"zIndex\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"custom zIndex for toast\"},\"defaultValue\":{\"value\":\"100\"}}]}},{\"node\":{\"displayName\":\"Tour\",\"docblock\":\"[WIP] a Tour component for feature discoverability\",\"description\":{\"text\":\"[WIP] a Tour component for feature discoverability\"},\"props\":[{\"name\":\"visible\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Whether to show the tour or not\"},\"defaultValue\":{\"value\":\"false\"}},{\"name\":\"onClose\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"callback for closing the tour\"},\"defaultValue\":null},{\"name\":\"overlayColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"The overlay background color\"},\"defaultValue\":{\"value\":\"Colors.white\"}},{\"name\":\"overlayOpacity\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"The overlay opacity\"},\"defaultValue\":{\"value\":\"0.9\"}},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"the message to show next to the target component\"},\"defaultValue\":null},{\"name\":\"messageStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"the message custom style\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"View\",\"docblock\":\"@description: Wrapper component for React Native View component\\n@extends: View\\n@extendslink: https://facebook.github.io/react-native/docs/view.html\\n@modifiers: margins, paddings, alignments, background, borderRadius\",\"description\":null,\"props\":[]}},{\"node\":{\"displayName\":\"ExampleComponent\",\"docblock\":\"\",\"description\":null,\"props\":[{\"name\":\"color\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":{\"value\":\"'blue'\"}},{\"name\":\"label\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"size\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"TouchableOpacity\",\"docblock\":\"@description: A wrapper for TouchableOpacity component. Support onPress, throttling and activeBackgroundColor\\n@extends: TouchableOpacity\\n@extendslink: https://facebook.github.io/react-native/docs/touchableopacity.html\\n@gif: https://media.giphy.com/media/xULW8AMIgw7l31zjm8/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/src/components/touchableOpacity/index.js\",\"description\":null,\"props\":[{\"name\":\"throttleTime\",\"type\":{\"name\":\"number\"},\"description\":{\"text\":\"throttle time in MS for onPress callback\"},\"defaultValue\":null},{\"name\":\"throttleOptions\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"throttle options\"},\"defaultValue\":null},{\"name\":\"activeBackgroundColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Apply background color on TouchableOpacity when active (press is on)\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"GridListItem component\",\"description\":{\"text\":\"GridListItem component\"},\"props\":[{\"name\":\"index\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"titleStyle\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"secondaryTitle\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"secondaryTitleStyle\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"subtitle\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":null},{\"name\":\"subtitleStyle\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"onPress\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"height\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"210\"}},{\"name\":\"imageSource\",\"type\":{\"name\":\"object\"},\"description\":null,\"defaultValue\":null},{\"name\":\"disabled\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"IGNORE\",\"docblock\":\"GridList component\",\"description\":{\"text\":\"GridList component\"},\"props\":[{\"name\":\"backgroundColor\",\"type\":{\"name\":\"string\"},\"description\":null,\"defaultValue\":{\"value\":\"Colors.dark80\"}},{\"name\":\"items\",\"type\":{\"name\":\"array\"},\"description\":null,\"defaultValue\":{\"value\":\"[]\"}},{\"name\":\"renderItem\",\"type\":{\"name\":\"func\"},\"description\":null,\"defaultValue\":null},{\"name\":\"itemsInRow\",\"type\":{\"name\":\"number\"},\"description\":null,\"defaultValue\":{\"value\":\"2\"}}]}},{\"node\":{\"displayName\":\"LoaderScreen\",\"docblock\":\"@description: Component that shows a full screen with an activity indicator\\n@extends: Animatable.View\\n@gif: https://media.giphy.com/media/3o75212iau1oK8hznG/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/LoadingScreen.js\",\"description\":null,\"props\":[{\"name\":\"loaderColor\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Color of the loading indicator\"},\"defaultValue\":null},{\"name\":\"message\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"loader message\"},\"defaultValue\":null},{\"name\":\"messageStyle\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"message style\"},\"defaultValue\":null},{\"name\":\"overlay\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"Show the screen as an overlay\"},\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Modal\",\"docblock\":\"@description: Component that present content on top of the invoking screen\\n@extends: Modal\\n@extendslink: https://facebook.github.io/react-native/docs/modal.html\\n@gif: https://media.giphy.com/media/3oFzmfSX8KgvctI4Ks/giphy.gif\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.js\",\"description\":null,\"props\":[{\"name\":\"enableModalBlur\",\"type\":{\"name\":\"bool\"},\"description\":null,\"defaultValue\":null}]}},{\"node\":{\"displayName\":\"Modal.TopBar\",\"docblock\":\"@description: Modal.TopBar, inner component for configuring the Modal component's title, buttons and statusBar\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.js\",\"description\":null,\"props\":[{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"title to display in the center of the top bar\"},\"defaultValue\":null},{\"name\":\"titleStyle\",\"type\":{\"name\":\"object\"},\"description\":{\"text\":\"title custom style\"},\"defaultValue\":null},{\"name\":\"doneButtonProps\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"done action props (Button props)\"},\"defaultValue\":{\"value\":\"{}\"}},{\"name\":\"doneLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"done action label\"},\"defaultValue\":{\"value\":\"'Save'\"}},{\"name\":\"doneIcon\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"done action icon\"},\"defaultValue\":null},{\"name\":\"onDone\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"done action callback\"},\"defaultValue\":null},{\"name\":\"cancelButtonProps\",\"type\":{\"name\":\"shape\"},\"description\":{\"text\":\"cancel action props (Button props)\"},\"defaultValue\":{\"value\":\"{}\"}},{\"name\":\"cancelLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"cancel action label\"},\"defaultValue\":null},{\"name\":\"cancelIcon\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"cancel action icon\"},\"defaultValue\":{\"value\":\"Assets.icons.x\"}},{\"name\":\"onCancel\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"cancel action callback\"},\"defaultValue\":null},{\"name\":\"includeStatusBar\",\"type\":{\"name\":\"bool\"},\"description\":{\"text\":\"whether to include status bar or not (height claculations)\"},\"defaultValue\":{\"value\":\"Constants.isIOS\"}}]}},{\"node\":{\"displayName\":\"StateScreen\",\"docblock\":\"@description: Component that shows a full screen for a certain state, like an empty state\\n@image: https://user-images.githubusercontent.com/33805983/34672894-f262ab84-f488-11e7-83f0-4ee0f0ac34ba.png\\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/EmptyStateScreen.js\",\"description\":null,\"props\":[{\"name\":\"imageSource\",\"type\":{\"name\":\"union\"},\"description\":{\"text\":\"The image source that's showing at the top. use an image that was required locally\"},\"defaultValue\":null},{\"name\":\"title\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"To to show as the title\"},\"defaultValue\":null},{\"name\":\"subtitle\",\"type\":{\"name\":\"any\"},\"description\":{\"text\":\"Text to to show as the subtitle\"},\"defaultValue\":null},{\"name\":\"ctaLabel\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Text to to show in the \\\"call to action\\\" button\"},\"defaultValue\":null},{\"name\":\"onCtaPress\",\"type\":{\"name\":\"func\"},\"description\":{\"text\":\"Action handler for \\\"call to action\\\" button\"},\"defaultValue\":null},{\"name\":\"testId\",\"type\":{\"name\":\"string\"},\"description\":{\"text\":\"Use to identify the container in tests\"},\"defaultValue\":null}]}}]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-highlighter-overlay-view.json\n// module id = 355\n// module chunks = 22131726337916"],"sourceRoot":""}